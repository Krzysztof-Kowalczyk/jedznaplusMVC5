@using System.Globalization
@model Jedznaplus.Models.Recipe

@{
    ViewBag.Title = "Szczegóły";
}

<h2>Szczegóły</h2>

<div class="przepis">
    <fieldset>
        <img id="recipeBigImg" src="@Url.Content(Model.ImageUrl)" alt="image" width="300" height="300" />

        <div class="info">
            <h1> @Html.DisplayFor(model => model.Name)</h1>
            <br>

            <div class="display-label">
                @Html.DisplayNameFor(model => model.PreparationTime):
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.PreparationTime) minut
            </div>
            <br>

            <div class="display-label">
                @Html.DisplayNameFor(model => model.Serves):
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.Serves)
            </div>
            <br>

            <div class="display-label">
                @Html.DisplayNameFor(model => model.Calories):
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.Calories) kcal
            </div>
            <br>
            <div class="display-label">
                Dodany przez:
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.UserName)
            </div>
            <br>
        </div>

        <div class="detailInfo">

            <div class="display-label">
                @Html.DisplayNameFor(model => model.Difficulty):
            </div>
            <div class="display-field">
                @Html.DisplayFor(model => model.Difficulty)
            </div>
            <br>

            <div class="display-label">
                @Html.DisplayNameFor(model => model.Vegetarian):
            </div>
            <div class="display-field">
                @(Model.Vegetarian ? "Tak" : "Nie")
            </div>
            <br>

            <div class="display-label">
                @Html.DisplayNameFor(model => model.Ingredients): (ilość: @Model.Ingredients.Count):
            </div>

            <div class="display-field">
                @foreach (var ingred in Model.Ingredients)
                {
                    <p> @ingred.Name @ingred.Quantity @Html.Action("ValidWordForm", new { unitName = ingred.UnitName, quantity = ingred.Quantity }) (<strong>Alergiczny:</strong> @(ingred.Alergic ? "Tak" : "Nie"))</p>
                }
            </div>
            <br>

            <div class="display-label">
                @Html.DisplayNameFor(model => model.PreparationMethod):
            </div>
            <div class="display-field">
                <p class="recipe_p_field">@Html.Raw(Model.PreparationMethod.Replace(Environment.NewLine, "<br/>"))</p>
            </div>
            <br>
        </div>

        <div class="VoteSystem">
            <div class="td0">Oceń potrawę</div>
            <div id="Now" class="td">@Html.Partial("_VoteNow", Model.Id.ToString(CultureInfo.InvariantCulture))</div>
            <div id="Show" class="td">@Html.Partial("_VoteShow", Model.Votes)</div>
        </div>

        <div class="CommentSystem">
            @Html.Partial("_Comments", Model.Comments, new ViewDataDictionary { { "id", Model.Id }})
        </div>

    </fieldset>
    <p>
        @if (Model.UserName == HttpContext.Current.User.Identity.Name || User.IsInRole("Admins"))
        {
            @Html.ActionLink("Edycja", "Edit", new { id = Model.Id }) <span>|</span>
        }
        @Html.ActionLink("Powrót do listy przepisów", "Index")
    </p>
</div>
@Scripts.Render("~/Scripts/Jedznaplus/VoteScripts.js")
@Scripts.Render("~/Scripts/Jedznaplus/Comments.js")
@Scripts.Render("~/bundles/jqueryval")
