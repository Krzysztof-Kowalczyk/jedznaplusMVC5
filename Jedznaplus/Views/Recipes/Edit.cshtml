@using Jedznaplus.Resources
@model Jedznaplus.Models.ViewModels.RecipeEditViewModels

<h1 class="title">Edycja</h1>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Name, new { maxlength = "50", size = "50" })
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <br>

        <div class="editor-label">
            @Html.LabelFor(model => model.Ingredients)
        </div>

        <ul id="ingredientEditor" style="list-style-type: none">
            @if (Model.Ingredients != null)
            {
                foreach (var ingre in Model.Ingredients)
                {
                    Html.RenderPartial("_IngredientEditor", ingre, new ViewDataDictionary { { "UnitNames", Model.UnitNameList} });
                }
            }
        </ul>

        <a id="addAnother" href="#">Dodaj kolejny składnik</a>
        <br><br>

        <div class="editor-label">
            @Html.LabelFor(model => model.PreparationMethod)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.PreparationMethod, 5, 60, null)
            @Html.ValidationMessageFor(model => model.PreparationMethod)
        </div>
        <br>


        <div class="editor-label">
            @Html.LabelFor(model => model.ImageUrl)
        </div>
        
        @if (Model.ImageUrl == ConstantStrings.DefaultRecipePhoto)
        {
            <input type="file" name="file" accept="image/jpeg,image/png">
            <br>
        }
        else
        {<img src="@Url.Content(Model.ImageUrl)" alt="image" width="150" height="150" />
            @Html.ActionLink("Usuń bieżące zdjęcie", "DeleteImage", new { id = Model.Id })
            <br>
        }

        <div class="editor-label">
            @Html.LabelFor(model => model.PreparationTime)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PreparationTime)
            @Html.ValidationMessageFor(model => model.PreparationTime)
        </div>
        <br>

        <div class="editor-label">
            @Html.LabelFor(model => model.Serves)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Serves)
            @Html.ValidationMessageFor(model => model.Serves)
        </div>
        <br>

        <div class="editor-label">
            @Html.LabelFor(model => model.Difficulty)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.Difficulty, Model.Difficulties)
        </div>
        <br>

        <div class="editor-label">
            @Html.LabelFor(model => model.Vegetarian)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Vegetarian)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Calories)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Calories)
            @Html.ValidationMessageFor(model => model.Calories)
        </div>
        <br>

        <p>
            <input type="submit" value="Zapisz" class="btn btn-default" />
        </p>
    </fieldset>
    @Scripts.Render("~/Scripts/Jedznaplus/ImagePickerScript.js")
    @Scripts.Render("~/Scripts/Jedznaplus/Ingredient.js")
    @Scripts.Render("~/Scripts/Jedznaplus/CreateIngredient.js")
}

<div>
    @Html.ActionLink("Powrót do listy przepisów", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
